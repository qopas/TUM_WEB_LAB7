@model IEnumerable<RentViewModel>
@{
ViewData["Title"] = "Rentals";
Layout = "_Layout";
}

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-xl font-semibold text-gray-900">Rentals Management</h1>
            <button id="addRentBtn" onclick="addRent()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium">
                Add New Rental
            </button>
        </div>
    </div>

    <div class="p-6">
        <table id="rentsTable" class="table table-striped table-bordered" style="width:100%">
            <thead>
            <tr>
                <th>Book</th>
                <th>Customer</th>
                <th>Destination</th>
                <th>Rent Date</th>
                <th>Due Date</th>
                <th>Return Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
<script>
    let table;

    $(document).ready(function() {
        table = $('#rentsTable').DataTable({
            processing: true,
            serverSide: false,
            ajax: {
                url: '/Rent/GetRentsData',
                type: 'GET'
            },
            columns: [
                { data: 'bookTitle' },
                { data: 'customerName' },
                { data: 'destinationName' },
                {
                    data: 'rentDate',
                    render: function(data) {
                        return new Date(data).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' });
                    }
                },
                {
                    data: 'dueDate',
                    render: function(data) {
                        return new Date(data).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' });
                    }
                },
                {
                    data: 'returnDate',
                    render: function(data) {
                        return data ? new Date(data).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' }) : '<span class="text-muted">-</span>';
                    }
                },
                {
                    data: 'status',
                    render: function(data) {
                        const statusMap = {
                            0: '<span class="badge bg-primary">Active</span>',
                            1: '<span class="badge bg-success">Returned</span>',
                            2: '<span class="badge bg-danger">Overdue</span>'
                        };
                        return statusMap[data] || '<span class="badge bg-secondary">Unknown</span>';
                    }
                },
                {
                    data: null,
                    orderable: false,
                    searchable: false,
                    render: function(data) {
                        const returnBtn = data.status === 0 ?
                            `<button type="button" class="btn btn-sm btn-outline-success" onclick="returnRent('${data.id}')">Return</button>` : '';

                        return `
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="editRent('${data.id}')">
                                    Edit
                                </button>
                                ${returnBtn}
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteRent('${data.id}')">
                                    Delete
                                </button>
                            </div>
                        `;
                    }
                }
            ],
            pageLength: 25,
            lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
            order: [[3, 'desc']] 
        });
    });

    function addRent() {
        openModal('/Rent/GetModalBody', {
            onSuccess: () => table.ajax.reload(null, false)
        });
    }

    function editRent(rentId) {
        openModal(`/Rent/GetModalBody/${rentId}`, {
            onSuccess: () => table.ajax.reload(null, false)
        });
    }

    function returnRent(rentId) {
        if (confirm('Are you sure you want to mark this rental as returned?')) {
            apiRequest(`/Rent/Return/${rentId}`, {
                method: 'POST',
                successMessage: 'Book returned successfully!',
                onSuccess: () => {
                    table.ajax.reload(null, false);
                }
            });
        }
    }

    function deleteRent(rentId) {
        if (confirm('Are you sure you want to delete this rental? This action cannot be undone.')) {
            apiRequest(`/Rent/Delete/${rentId}`, {
                method: 'POST',
                successMessage: 'Rental deleted successfully!',
                onSuccess: () => {
                    table.ajax.reload(null, false);
                }
            });
        }
    }
</script>
}