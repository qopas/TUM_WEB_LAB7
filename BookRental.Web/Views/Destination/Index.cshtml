@model IEnumerable<DestinationViewModel>
@{
    ViewData["Title"] = "Destinations";
    Layout = "_Layout";
}

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-xl font-semibold text-gray-900">Destinations Management</h1>
            <button id="addDestinationBtn" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium">
                Add New Destination
            </button>
        </div>
    </div>

    <div class="p-6">
        <table id="destinationsTable" class="table table-striped table-bordered" style="width:100%">
            <thead>
            <tr>
                <th>Name</th>
                <th>Address</th>
                <th>City</th>
                <th>Contact Person</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<div class="modal fade" id="destinationModal" tabindex="-1" aria-labelledby="destinationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="destinationModalLabel">Add New Destination</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="destinationForm" class="needs-validation" novalidate>
                <div class="modal-body">
                    <input type="hidden" id="destinationId" name="Id">

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="destinationName" class="form-label">Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="destinationName" name="Name" required maxlength="100">
                            <div class="invalid-feedback">Please provide a valid destination name.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="destinationCity" class="form-label">City <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="destinationCity" name="City" required maxlength="100">
                            <div class="invalid-feedback">Please provide a valid city name.</div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label for="destinationAddress" class="form-label">Address <span class="text-danger">*</span></label>
                            <textarea class="form-control" id="destinationAddress" name="Address" rows="3" required maxlength="200"></textarea>
                            <div class="invalid-feedback">Please provide a valid address.</div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="destinationContact" class="form-label">Contact Person <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="destinationContact" name="ContactPerson" required maxlength="100">
                            <div class="invalid-feedback">Please provide a valid contact person name.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="destinationPhone" class="form-label">Phone Number <span class="text-danger">*</span></label>
                            <input type="tel" class="form-control" id="destinationPhone" name="PhoneNumber" required maxlength="20" 
                                   pattern="[0-9+\-\s\(\)]+" title="Please enter a valid phone number">
                            <div class="invalid-feedback">Please provide a valid phone number.</div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="validateAndSubmitDestination()">
                        Save Destination
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this destination?</p>
                <p class="text-muted small">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    Delete Destination
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
$(document).ready(function() {
    let table;
    let destinationToDelete = null;
    
    table = $('#destinationsTable').DataTable({
        processing: true,
        serverSide: false,
        ajax: {
            url: '/Destination/GetDestinationsData',
            type: 'GET'
        },
        columns: [
            { data: 'name' },
            { data: 'address' },
            { data: 'city' },
            { data: 'contactPerson' },
            { data: 'phoneNumber' },
            { 
                data: 'id',
                orderable: false,
                searchable: false,
                render: function(data) {
                    return `
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-sm btn-outline-primary edit-btn" data-destination-id="${data}">
                                Edit
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-danger delete-btn" data-destination-id="${data}">
                                Delete
                            </button>
                        </div>
                    `;
                }
            }
        ],
        pageLength: 25,
        lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
        order: [[0, 'asc']]
    });

    $('#addDestinationBtn').on('click', function() {
        $('#destinationModalLabel').text('Add New Destination');
        resetForm('#destinationForm');
        $('#destinationId').val('');
        $('#destinationModal').modal('show');
    });

    $(document).on('click', '.edit-btn', async function() {
        const destinationId = $(this).data('destination-id');
        
        await apiGet(`/Destination/Details/${destinationId}`, {
            onSuccess: (destination) => {
                $('#destinationModalLabel').text('Edit Destination');
                resetForm('#destinationForm');
                $('#destinationId').val(destination.id);
                $('#destinationName').val(destination.name);
                $('#destinationAddress').val(destination.address);
                $('#destinationCity').val(destination.city);
                $('#destinationContact').val(destination.contactPerson);
                $('#destinationPhone').val(destination.phoneNumber);
                $('#destinationModal').modal('show');
            }
        });
    });
    
    $(document).on('click', '.delete-btn', function() {
        destinationToDelete = $(this).data('destination-id');
        $('#deleteModal').modal('show');
    });
    
    $('#confirmDelete').on('click', function() {
        if (destinationToDelete) {
            apiDelete(`/Destination/Delete/${destinationToDelete}`, {
                successMessage: 'Destination deleted successfully!',
                onSuccess: () => {
                    $('#deleteModal').modal('hide');
                    table.ajax.reload(null, false);
                    destinationToDelete = null;
                }
            });
        }
    });

    function validateForm(formSelector) {
        const form = document.querySelector(formSelector);
        
        if (form.checkValidity()) {
            return true;
        }
        
        form.classList.add('was-validated');
        return false;
    }

    window.validateAndSubmitDestination = function() {
        if (validateForm('#destinationForm')) {
            const formData = new FormData(document.getElementById('destinationForm'));
            const isEdit = document.getElementById('destinationId').value !== '';
            const url = isEdit ? '/Destination/Edit' : '/Destination/Create';
            
            const submitBtn = document.querySelector('#destinationModal .btn-primary');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = 'Saving...';
            submitBtn.disabled = true;

            apiPost(url, formData, {
                successMessage: `Destination ${isEdit ? 'updated' : 'created'} successfully!`,
                onSuccess: () => {
                    $('#destinationModal').modal('hide');
                    table.ajax.reload(null, false);
                }
            }).finally(() => {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            });
        }
    }

    function resetForm(formSelector) {
        const form = document.querySelector(formSelector);
        form.classList.remove('was-validated');
        form.reset();
    }
    
    $('#destinationModal').on('hidden.bs.modal', function() {
        resetForm('#destinationForm');
        $('#destinationId').val('');
    });
    
    $('#deleteModal').on('hidden.bs.modal', function() {
        destinationToDelete = null;
    });
});
</script>
}