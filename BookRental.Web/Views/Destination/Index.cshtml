@model IEnumerable<DestinationViewModel>
@{
ViewData["Title"] = "Destinations";
Layout = "_Layout";
}

<div class="bg-white rounded-lg shadow">
    <div class="px-6 py-4 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h1 class="text-xl font-semibold text-gray-900">Destinations Management</h1>
            <button id="addDestinationBtn" onclick="addDestination()" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium">
                Add New Destination
            </button>
        </div>
    </div>

    <div class="p-6">
        <table id="destinationsTable" class="table table-striped table-bordered" style="width:100%">
            <thead>
            <tr>
                <th>Name</th>
                <th>Address</th>
                <th>City</th>
                <th>Contact Person</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const destinationsTable = initializeDataTable('#destinationsTable', {
            ajax: {
                url: '@Url.Action("GetDestinationsData", "Destination")',
                type: 'GET'
            },
            columns: [
                { data: 'name' },
                {
                    data: 'address',
                    render: function(data) {
                        return data.length > 50 ? data.substring(0, 50) + '...' : data;
                    }
                },
                { data: 'city' },
                { data: 'contactPerson' },
                { data: 'phoneNumber' },
                {
                    data: 'id',
                    orderable: false,
                    searchable: false,
                    render: function(data) {
                        return `
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="editDestination('${data}')">
                                    Edit
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteDestination('${data}')">
                                    Delete
                                </button>
                            </div>
                        `;
                    }
                }
            ]
        });

        window.destinationsTable = destinationsTable;
    });

    function addDestination() {
        openModal('@Url.Action("GetModalBody", "Destination")', {
            onSuccess: () => window.destinationsTable.ajax.reload(null, false),
            modalSize: 'lg'
        });
    }

    function editDestination(destinationId) {
        const editUrl = '@Url.Action("GetModalBody", "Destination")' + '/' + destinationId;
        openModal(editUrl, {
            onSuccess: () => window.destinationsTable.ajax.reload(null, false),
            modalSize: 'lg'
        });
    }

    function deleteDestination(destinationId) {
        if (confirm('Are you sure you want to delete this destination? This action cannot be undone.')) {
            const deleteUrl = '@Url.Action("Delete", "Destination")' + '/' + destinationId;
            apiRequest(deleteUrl, {
                method: 'POST',
                successMessage: 'Destination deleted successfully!',
                onSuccess: () => {
                    window.destinationsTable.ajax.reload(null, false);
                }
            });
        }
    }
</script>