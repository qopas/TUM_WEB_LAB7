<table id="destinationsTable" class="table table-striped table-bordered" style="width:100%">
    <thead>
    <tr>
        <th>Name</th>
        <th>Address</th>
        <th>City</th>
        <th>Contact Person</th>
        <th>Phone Number</th>
        <th>Actions</th>
    </tr>
    </thead>
</table>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const destinationsTable = initializeDataTable('#destinationsTable', '@Url.Action("GetDestinationsData", "Destination")', {
            columns: [
                { data: 'name' },
                {
                    data: 'address',
                    render: function(data) {
                        return data.length > 50 ? data.substring(0, 50) + '...' : data;
                    }
                },
                { data: 'city' },
                { data: 'contactPerson' },
                { data: 'phoneNumber' },
                {
                    data: null,
                    orderable: false,
                    searchable: false,
                    render: function(data, type, row) {
                        return `
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick='editDestination(${JSON.stringify(row)})'>
                                    Edit
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteDestination('${row.id}')">
                                    Delete
                                </button>
                            </div>
                        `;
                    }
                }
            ]
        });

        window.destinationsTable = destinationsTable;
    });

    function editDestination(destinationData) {
        openModal('@Url.Action("GetModalBody", "Destination")', destinationData, {
            onSuccess: () => window.destinationsTable.ajax.reload(null, false),
            modalSize: 'lg'
        });
    }

    function deleteDestination(destinationId) {
        if (confirm('Are you sure you want to delete this destination? This action cannot be undone.')) {
            const deleteUrl = '@Url.Action("Delete", "Destination")' + '/' + destinationId;
            apiRequest(deleteUrl, {
                method: 'POST',
                successMessage: 'Destination deleted successfully!',
                onSuccess: () => {
                    window.destinationsTable.ajax.reload(null, false);
                }
            });
        }
    }
</script>